{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "VirtualMachineName": {
            "type": "string",
            "defaultValue": "vm-CloudStudio",
            "metadata": {
				"description": "Local name for the VM. Must be 1-15 characters long. It may not contain \"\/\"'[]:|<>+=;,?*@&\". It can't start with underscore. It can't end with period or hyphen."
            }
        },
        "AdminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            },
			"defaultValue": ""
        },
        "AdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            },
			"defaultValue": ""
        },
        "ArtifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/kphillpotts/CloudStudio/master/",
            "metadata": {
                "description": "Public URI location of PowerShell Chocolately setup script"
            }
        },
        "ScenesLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/kphillpotts/CloudStudio/master/",
            "metadata": {
                "description": "Public URI location of the OBS scenes."
            }
        }        
    },
    "variables": {
		"location": "[resourceGroup().location]",
		"worker_vmSize": "Standard_NV6",
		"vnet_name": "vnet-CloudStudio",
		"vnet_ip_prefix": "10.1.0.0/23",
		"bastion-subnet-ip-prefix": "10.1.1.0/24",
		"worker-subnet-ip-prefix": "10.1.0.0/24",
		"worker_nic_name": "nic-CloudStudio",
		"worker_publicIPAddress_name": "pip-CloudStudio",
		"worker_dnsprefix": "cloudstudiovm",
		"worker_nsg_name": "nsg-CloudStudio",
		"setupChocolateyScriptFileName": "ChocoInstall.ps1",
		"artifactsLocationSasToken" : "",
		"chocoPackages": "obs-studio;skype",
        "vmImagePublisher": "MicrosoftWindowsDesktop",
        "vmImageOffer": "Windows-10",
        "sku": "rs5-pro",
        "scriptFolder": ".",
        "setupScriptLocation": "[uri(parameters('ArtifactsLocation'),concat(variables('setupChocolateyScriptFileName'),variables('artifactsLocationSasToken')))]",
        "bastion-subnet-name": "AzureBastionSubnet",
        "bastion-host-name": "cloudstudiobastion",
        "public-ip-address-name": "[concat('pip-',variables('bastion-host-name'))]",
        "nsg-name": "[concat('nsg-', variables('bastion-host-name'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-07-01",
            "name": "[variables('worker_nsg_name')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "TLS",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('public-ip-address-name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('nsg-name')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "bastion-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-control-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRanges": [
                                "443",
                                "4443"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-in-deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 900,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-vnet-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-azure-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('worker-subnet-ip-prefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('worker_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vnet_name'), '/', variables('bastion-subnet-name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "[variables('bastion-subnet-ip-prefix')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-07-01",
            "name": "[variables('vnet_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('worker_nsg_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnet_ip_prefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "[variables('worker-subnet-ip-prefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "[variables('bastion-subnet-name')]",
                        "properties": {
                            "addressPrefix": "[variables('bastion-subnet-ip-prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-name'))]"
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Network/bastionHosts",
            "name": "[variables('bastion-host-name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('public-ip-address-name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), variables('bastion-subnet-name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), variables('bastion-subnet-name'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('public-ip-address-name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-07-01",
            "name": "[variables('worker_publicIPAddress_name')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('worker_dnsprefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-07-01",
            "name": "[variables('worker_nic_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('worker_publicIPAddress_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), 'default')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.0.4.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('worker_publicIPAddress_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('worker_nsg_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[parameters('VirtualMachineName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('worker_nic_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('worker_vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmImagePublisher')]",
                        "offer": "[variables('vmImageOffer')]",
                        "sku": "[variables('sku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('VirtualMachineName'), '_OsDisk')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('VirtualMachineName')]",
                    "adminUsername": "[parameters('AdminUsername')]",
                    "adminPassword": "[parameters('AdminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('worker_nic_name'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('VirtualMachineName'),'/GPUDrivers')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[variables('location')]",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineName'))]"
            ],
            "tags": {
                "displayName": "gpu-nvidia-drivers"
            },
            "properties": {
                "publisher": "Microsoft.HpcCompute",
                "type": "NvidiaGpuDriverWindows",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": true,
                "settings": {
                }
            }
        },
        {
            "name": "[concat(parameters('VirtualMachineName'),'/SetupChocolatey')]",
            "apiVersion": "2019-07-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', parameters('VirtualMachineName'), 'GPUDrivers')]"
            ],
            "tags": {
                "displayName": "config-choco"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('setupScriptLocation')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy bypass -File ', variables('scriptFolder'), '/',variables('setupChocolateyScriptFileName'),' -chocoPackages ',variables('chocoPackages'),' -scenesLocation ', parameters('ScenesLocation'))]"
                },
                "protectedSettings": {
                }
            }
        }
    ],
    "outputs": {}
}
